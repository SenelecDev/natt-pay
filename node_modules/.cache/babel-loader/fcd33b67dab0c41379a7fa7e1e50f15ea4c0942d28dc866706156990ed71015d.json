{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babacar.seck1\\\\Documents\\\\reactapp\\\\natt-pay\\\\src\\\\contexts\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport tontinesData from '../data/tontines';\nimport transactionsData from '../data/transactions';\nimport categoriesData from '../data/categories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const useAppContext = () => {\n  _s();\n  return useContext(AppContext);\n};\n_s(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [activeTab, setActiveTab] = useState('accueil');\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [fabMenuOpen, setFabMenuOpen] = useState(false);\n\n  // Forms state\n  const [showNewTontineForm, setShowNewTontineForm] = useState(false);\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\n  const [showInviteForm, setShowInviteForm] = useState(false);\n  const [showReminderForm, setShowReminderForm] = useState(false);\n  const [showDepositForm, setShowDepositForm] = useState(false);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [showPaymentConfirmation, setShowPaymentConfirmation] = useState(false);\n\n  // Data state\n  const [tontines, setTontines] = useState(tontinesData);\n  const [transactions, setTransactions] = useState(transactionsData);\n  const [categories, setCategories] = useState(categoriesData);\n\n  // User information\n  const userInfo = {\n    name: \"Fatou Diallo\",\n    email: \"fatou.diallo@example.com\",\n    balance: 350000,\n    avatar: \"https://public.readdy.ai/ai/img_res/5f94ab93830b40e3bd8fe2da184334b1.jpg\"\n  };\n\n  // Functions to handle forms\n  const handleCreateTontine = newTontine => {\n    const tontineWithId = {\n      ...newTontine,\n      id: tontines.length + 1,\n      progression: 0\n    };\n    setTontines([...tontines, tontineWithId]);\n    setShowNewTontineForm(false);\n  };\n  const handlePayment = paymentData => {\n    const newTransaction = {\n      id: transactions.length + 1,\n      type: \"Paiement\",\n      tontine: paymentData.tontineName,\n      montant: parseFloat(paymentData.amount),\n      date: new Date().toLocaleDateString('fr-FR', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      }),\n      statut: \"Complété\"\n    };\n    setTransactions([...transactions, newTransaction]);\n    setShowPaymentConfirmation(true);\n    setShowPaymentForm(false);\n  };\n\n  // Format date\n  const currentDate = new Date();\n  const formattedDate = new Intl.DateTimeFormat('fr-FR', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  }).format(currentDate);\n\n  // Global click handler to close menus\n  const handleGlobalClick = () => {\n    setProfileMenuOpen(false);\n    setFabMenuOpen(false);\n  };\n  const value = {\n    activeTab,\n    setActiveTab,\n    profileMenuOpen,\n    setProfileMenuOpen,\n    fabMenuOpen,\n    setFabMenuOpen,\n    showNewTontineForm,\n    setShowNewTontineForm,\n    showPaymentForm,\n    setShowPaymentForm,\n    showInviteForm,\n    setShowInviteForm,\n    showReminderForm,\n    setShowReminderForm,\n    showDepositForm,\n    setShowDepositForm,\n    showTransferForm,\n    setShowTransferForm,\n    showPaymentConfirmation,\n    setShowPaymentConfirmation,\n    tontines,\n    transactions,\n    categories,\n    userInfo,\n    formattedDate,\n    handleGlobalClick,\n    handleCreateTontine,\n    handlePayment\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_s2(AppProvider, \"dkCbInOLjuA01JBdtaGcR2t2Sr8=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","tontinesData","transactionsData","categoriesData","jsxDEV","_jsxDEV","AppContext","useAppContext","_s","AppProvider","children","_s2","activeTab","setActiveTab","profileMenuOpen","setProfileMenuOpen","fabMenuOpen","setFabMenuOpen","showNewTontineForm","setShowNewTontineForm","showPaymentForm","setShowPaymentForm","showInviteForm","setShowInviteForm","showReminderForm","setShowReminderForm","showDepositForm","setShowDepositForm","showTransferForm","setShowTransferForm","showPaymentConfirmation","setShowPaymentConfirmation","tontines","setTontines","transactions","setTransactions","categories","setCategories","userInfo","name","email","balance","avatar","handleCreateTontine","newTontine","tontineWithId","id","length","progression","handlePayment","paymentData","newTransaction","type","tontine","tontineName","montant","parseFloat","amount","date","Date","toLocaleDateString","day","month","year","statut","currentDate","formattedDate","Intl","DateTimeFormat","format","handleGlobalClick","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/babacar.seck1/Documents/reactapp/natt-pay/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\nimport tontinesData from '../data/tontines';\r\nimport transactionsData from '../data/transactions';\r\nimport categoriesData from '../data/categories';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [activeTab, setActiveTab] = useState('accueil');\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const [fabMenuOpen, setFabMenuOpen] = useState(false);\r\n  \r\n  // Forms state\r\n  const [showNewTontineForm, setShowNewTontineForm] = useState(false);\r\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\r\n  const [showInviteForm, setShowInviteForm] = useState(false);\r\n  const [showReminderForm, setShowReminderForm] = useState(false);\r\n  const [showDepositForm, setShowDepositForm] = useState(false);\r\n  const [showTransferForm, setShowTransferForm] = useState(false);\r\n  const [showPaymentConfirmation, setShowPaymentConfirmation] = useState(false);\r\n  \r\n  // Data state\r\n  const [tontines, setTontines] = useState(tontinesData);\r\n  const [transactions, setTransactions] = useState(transactionsData);\r\n  const [categories, setCategories] = useState(categoriesData);\r\n  \r\n  // User information\r\n  const userInfo = {\r\n    name: \"Fatou Diallo\",\r\n    email: \"fatou.diallo@example.com\",\r\n    balance: 350000,\r\n    avatar: \"https://public.readdy.ai/ai/img_res/5f94ab93830b40e3bd8fe2da184334b1.jpg\"\r\n  };\r\n\r\n  // Functions to handle forms\r\n  const handleCreateTontine = (newTontine) => {\r\n    const tontineWithId = {\r\n      ...newTontine,\r\n      id: tontines.length + 1,\r\n      progression: 0,\r\n    };\r\n    setTontines([...tontines, tontineWithId]);\r\n    setShowNewTontineForm(false);\r\n  };\r\n\r\n  const handlePayment = (paymentData) => {\r\n    const newTransaction = {\r\n      id: transactions.length + 1,\r\n      type: \"Paiement\",\r\n      tontine: paymentData.tontineName,\r\n      montant: parseFloat(paymentData.amount),\r\n      date: new Date().toLocaleDateString('fr-FR', { day: 'numeric', month: 'long', year: 'numeric' }),\r\n      statut: \"Complété\"\r\n    };\r\n    \r\n    setTransactions([...transactions, newTransaction]);\r\n    setShowPaymentConfirmation(true);\r\n    setShowPaymentForm(false);\r\n  };\r\n\r\n  // Format date\r\n  const currentDate = new Date();\r\n  const formattedDate = new Intl.DateTimeFormat('fr-FR', {\r\n    day: 'numeric',\r\n    month: 'long',\r\n    year: 'numeric'\r\n  }).format(currentDate);\r\n\r\n  // Global click handler to close menus\r\n  const handleGlobalClick = () => {\r\n    setProfileMenuOpen(false);\r\n    setFabMenuOpen(false);\r\n  };\r\n\r\n  const value = {\r\n    activeTab,\r\n    setActiveTab,\r\n    profileMenuOpen,\r\n    setProfileMenuOpen,\r\n    fabMenuOpen,\r\n    setFabMenuOpen,\r\n    showNewTontineForm,\r\n    setShowNewTontineForm,\r\n    showPaymentForm,\r\n    setShowPaymentForm,\r\n    showInviteForm,\r\n    setShowInviteForm,\r\n    showReminderForm,\r\n    setShowReminderForm,\r\n    showDepositForm,\r\n    setShowDepositForm,\r\n    showTransferForm,\r\n    setShowTransferForm,\r\n    showPaymentConfirmation,\r\n    setShowPaymentConfirmation,\r\n    tontines,\r\n    transactions,\r\n    categories,\r\n    userInfo,\r\n    formattedDate,\r\n    handleGlobalClick,\r\n    handleCreateTontine,\r\n    handlePayment\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}